@use "@guebbit/css-toolkit" as guebbit;
@forward "@guebbit/css-toolkit";

/**
 * "Install" theme colors and settings
 * for all components of this library
 */
@forward "../src/vars";
@use "../src/vars" as theme;

@use "@guebbit/css-ui/src/theme" as ui with (
  $css-ui-dark-theme-class: theme.$css-ui-dark-theme-class,
  $css-ui-var-prefix: theme.$css-ui-var-prefix,
  $css-ui-root-prefix: theme.$css-ui-root-prefix,
  $color: theme.$primary-color,
  $color--dark: theme.$primary-color--dark,
  $active-color: theme.$secondary-color,
  $active-color--dark: theme.$secondary-color--dark,
);

/**
 * Implement theme (insert in the css)
 */
:root{
    @include ui.theme-generic;
    @include ui.theme-dark-builder;
}
.#{ui.$css-ui-dark-theme-class}{
    :root{
        @include ui.theme-dark-builder;
    }
}
@media (prefers-color-scheme: dark) {
    :root{
        @include ui.theme-dark-builder;
    }
}

/**
 * Create specific colors (css vars and various classes),
 * unrelated to the componets but of global use
 */
@include guebbit.create-colors(guebbit.$colors-collection);
@include guebbit.create-colors((
    "primary": guebbit.create-collection(theme.$primary-color),
    "secondary": guebbit.create-collection(theme.$secondary-color),
    "primary--dark": guebbit.create-collection(theme.$primary-color--dark),
    "secondary--dark": guebbit.create-collection(theme.$secondary-color--dark)
));
